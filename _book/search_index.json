[
["readxl.html", "Chapter 3 readxl 3.1 Summary (a few sentences) 3.2 Objectives (more detailed, bulletpoints?) 3.3 Resources 3.4 Lessons teaching for each objective….. (objectives, examples) 3.5 Fun facts (quirky things) - making a note of these wherever possible for interest (little “Did you know?” sections) 3.6 Interludes (deep thoughts/openscapes) 3.7 Our Turn Your Turn 1 3.8 Our Turn Your Turn 2 3.9 Efficiency Tips", " Chapter 3 readxl Note for Allison: the {#readxl} above lets us reference it from another chapter…not sure how much we’ll use it but it’s possible (and doesn’t hurt to have). Cool, thanks Julie! 3.1 Summary (a few sentences) The readxl package makes it easy to import tabular data from Excel spreadsheets (.xls or .xlsx files) and includes several options for cleaning data during import. readxl has no external dependencies and functions on any operating system, making it an OS- and user-friendly package that simplifies getting your data from Excel into R. 3.2 Objectives (more detailed, bulletpoints?) Use readr::read_csv() to read in a comma separated value (CSV) file Use readxl::read_excel() to read in an Excel worksheet Use readxl::read_excel() to read in parts of a worksheet (by cell range) Specify column names when importing Excel data Replace a specific string/value in a spreadsheet with with ‘NA’ Skip n rows when importing an Excel worksheet Read in multiple Excel worksheets Something about readxl workflows (e.g. %&gt;% write_csv() to keep a copy of the raw data in a project)?? 3.3 Resources https://readxl.tidyverse.org/ 3.4 Lessons teaching for each objective….. (objectives, examples) 3.4.1 a. Use readr::read_csv() to read in data from a CSV file There are many types of files containing data that you might want to work with in R. A common one is a comma separated value (CSV) file, which contains values with each column entry separated by a comma delimiter. CSVs can be opened, viewed, and worked with in Excel just like an .xlx or .xlsx file - but let’s learn how to get data directly from a CSV into R where we can work with it more reproducibly. First, create a new .R script and add a useful header to the top of it. For example, at a minimum: # -------------------------------- # A descriptive title # Summary of what this script is for # Your name # Contact information # -------------------------------- # Other things you might include: required packages or datasets, relevant links (e.g. to raw data source, GitHub repo, etc.), citations and sources. 3.5 Fun facts (quirky things) - making a note of these wherever possible for interest (little “Did you know?” sections) 3.6 Interludes (deep thoughts/openscapes) 3.7 Our Turn Your Turn 1 3.8 Our Turn Your Turn 2 3.9 Efficiency Tips "]
]
